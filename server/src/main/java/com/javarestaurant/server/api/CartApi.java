/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.javarestaurant.server.api;

import com.javarestaurant.data.model.Order;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-29T13:13:37.274Z[GMT]")
@Api(value = "cart", description = "the cart API")
public interface CartApi {

	@ApiOperation(value = "Confirm the orders", nickname = "confirmCart", notes = "Should only be carried by restaurant owner, and be logged in", tags = {"cart",})
	@ApiResponses(value = {
		@ApiResponse(code = 200, message = "successful operation"),
		@ApiResponse(code = 400, message = "not logged in/ not restaurant owner"),
		@ApiResponse(code = 401, message = "invalid data")})
	@RequestMapping(value = "/cart/confirm",
		method = RequestMethod.GET)
	ResponseEntity<Void> confirmCart(@ApiParam(value = "") @Valid @RequestParam(value = "addressID", required = false) Integer addressID
	);


	@ApiOperation(value = "empty the cart", nickname = "deleteCart", notes = "", tags = {"cart",})
	@ApiResponses(value = {
		@ApiResponse(code = 200, message = "successful operation"),
		@ApiResponse(code = 401, message = "Not logged in")})
	@RequestMapping(value = "/cart",
		method = RequestMethod.DELETE)
	ResponseEntity<Void> deleteCart();


	@ApiOperation(value = "Get all orders", nickname = "getCart", notes = "", response = Order.class, responseContainer = "List", tags = {"cart",})
	@ApiResponses(value = {
		@ApiResponse(code = 200, message = "successful operation", response = Order.class, responseContainer = "List"),
		@ApiResponse(code = 400, message = "Not Logged in")})
	@RequestMapping(value = "/cart",
		produces = {"application/xml", "application/json"},
		method = RequestMethod.GET)
	ResponseEntity<List<Order>> getCart();

}
